AWSTemplateFormatVersion: "2010-09-09"
Description: "Organization Formation Reference project bootstrap"
Transform: "AWS::Serverless-2016-10-31"

Metadata:
  AWS::ServerlessRepo::Application:
    Name: org-formation-minimal
    Description: Organization Formation Reference
    Author: Org Formation
    SpdxLicenseId: Apache-2.0
    Labels: ["org-formation", "multi-account", "cicd", "devops"]
    HomePageUrl: https://github.com/org-formation/org-formation-reference
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/org-formation/org-formation-reference
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Bootstrapping"
        Parameters:
          - bootstrapCleanup
      - Label:
          default: "Organization Formation Build Account"
        Parameters:
          - BuildAccount
          - buildAccountRootEmail
          - buildAccountName
          - buildAccountId
      - Label:
          default: "Organization Formation"
        Parameters:
          - buildAccountRootEmail
          - buildAccountName
          - crossAccountRoleName

Parameters:
  resourcePrefix:
    Type: String
    Default: "orgformation-bootstrap"

  bootstrapCleanup:
    Type: String
    Default: "YES"
    AllowedValues: ["YES", "NO"]
    Description: Should the Bootstrapping process clean itself up?

  buildAccountRootEmail:
    Type: String
    Description: What is the root email of the account you would like to use as build account

  buildAccountName:
    Type: String
    Default: "Organization Build"
    Description: What should be the name of the build account?

  crossAccountRoleName:
    Type: String
    Default: "OrganizationAccountAccessRole"
    Description: For new accounts that that will be created, what would be the cross account access role name?


  # buildAccountId:
  #   Type: String
  #   Default: "-"
  #   Description: If using existing account, what account id?

  # formationResourcePrefix:
  #   Type: String
  #   Default: orgformation
  #   Description: How should org-formation resources be prefixed?

  # formationRepositoryName:
  #   Type: String
  #   Default: organization-formation
  #   Description: How should the org-formation repository be named?

  # formationStateBucketName:
  #   Type: String
  #   Default: organization-formation-${AWS::AccountId}
  #   Description: How should the org-formation state bucket be named?

Resources:
  OrgBuildLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/codebuild/${resourcePrefix}-build"

  OrgBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${resourcePrefix}-build-service-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess" # see: https://github.com/org-formation/org-formation-cli/blob/master/docs/least-priviledge.md
      Policies:
        - PolicyName: !Sub "${resourcePrefix}-build-service-role-policy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !GetAtt OrgBuildLogGroup.Arn
                  - !Sub "${OrgBuildLogGroup.Arn}:*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::organization-formation-${AWS::AccountId}"
                  - !Sub "arn:aws:s3:::organization-formation-${AWS::AccountId}/*"
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Resource:
                  - !GetAtt OrgRepo.Arn
                Action:
                  - codecommit:GitPull

  OrgPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${resourcePrefix}-codepipeline-service-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub "${resourcePrefix}-codepipeline-service-role-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: "*"
                Effect: Allow
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: "*"
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: "*"
                Effect: Allow
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource: "*"
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
                Effect: Allow
              - Effect: Allow
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: "*"
              - Effect: Allow
                Action:
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifact
                  - servicecatalog:DescribeProvisioningArtifact
                  - servicecatalog:DeleteProvisioningArtifact
                  - servicecatalog:UpdateProduct
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:DescribeImages
                Resource: "*"

  OrgRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${resourcePrefix}-repo"
      RepositoryDescription: AWS Organization Formation repository
      Code:
        BranchName: main
        S3:
          Bucket: org-formation-reference
          Key: initial-commit.zip

  OrgFormationInitPipeline:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  OrgPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref OrgFormationInitPipeline
      Name: !Sub "${resourcePrefix}-pipeline"
      RoleArn: !GetAtt OrgPipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              Region: !Ref AWS::Region
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                PollForSourceChanges: "false"
                BranchName: main
                RepositoryName: !GetAtt OrgRepo.Name
              RunOrder: 1
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: SourceArtifact
              Name: Build
              Region: !Ref AWS::Region
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref OrgBuildProject
              RunOrder: 1

  OrgPipelineEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub Listens for changes to the ${OrgRepo.Name} repository and runs the pipeline
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt OrgRepo.Arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Name: !Sub "${resourcePrefix}-pipeline-event-rule"
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${OrgPipeline}
          RoleArn: !GetAtt OrgPipelineEventRuleRole.Arn
          Id: OrgPipeline

  OrgPipelineEventRuleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: !Sub Used to trigger the pipeline attached to the ${OrgRepo.Name} repository
      Path: /
      Policies:
        - PolicyName: !Sub ${resourcePrefix}-pipeline-event-rule-role-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${OrgPipeline}
      RoleName: !Sub ${resourcePrefix}-pipeline-event-rule-role

  OrgBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${resourcePrefix}-build"
      Description: AWS Organization Formation Build Project
      Artifacts: { Type: NO_ARTIFACTS }
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          - Name: BUILD_ACCT_ROOTEMAIL
            Value: !Ref buildAccountRootEmail
          - Name: BUILD_ACCT_NAME
            Value: !Ref buildAccountName
          - Name: X_ACCT_ROLE_NAME
            Value: !Ref crossAccountRoleName
      QueuedTimeoutInMinutes: 480
      ServiceRole: !Ref OrgBuildRole
      Source:
        GitCloneDepth: 1
        Location: !GetAtt OrgRepo.CloneUrlHttp
        Type: CODECOMMIT
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref OrgBuildLogGroup
          Status: ENABLED
      SourceVersion: refs/heads/main
      TimeoutInMinutes: 180
